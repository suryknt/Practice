package challange;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.StringTokenizer;

public class Kvowels {
	public static void main(String[] args) {
		FastReader fr=new FastReader();
		int t=fr.nextInt();
		int n=fr.nextInt();
		int k=fr.nextInt();
		char[] s=fr.nextLine().toCharArray();
		int[][] dp=new int[6][n];
		Set<Character> vowels=new HashSet<Character>();
		vowels.addAll(Arrays.asList('a','A','e','E','i','I','o','O','u','U'));
		
		for(int i=0;i<6;i++) {
			for(int j=0;j<n;j++) {
				if(j==0)dp[i][j]=0;
				else {
					if(vowels.contains(s[j]))dp[i][j]=dp[i-1][j-1];
					else dp[i][j]=dp[i][j-1];
					dp[i][j]++;
				}
			System.out.println("i:: "+i+" j:: "+j+" dp:: "+dp[i][j]);	
			}
		}
		System.out.println(dp[k][n-1]);
		
	}
	
	static class FastReader{
		BufferedReader br;
		StringTokenizer st;
		
		public FastReader() {
			br=new BufferedReader(new InputStreamReader(System.in));
		}
		public String next() {
			while(st==null || !st.hasMoreElements()) {
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		int nextInt() {
			return Integer.parseInt(next());
		}
		long nextLong() {
			return Long.parseLong(next());
		}
		String nextLine() {
			String ret="";
			try {
				ret=br.readLine();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return ret;
		}
		
		
	}
}
