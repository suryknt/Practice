package Train;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

public class CountNoOfWays {
	
	public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter wr = new PrintWriter(System.out);
        int T = Integer.parseInt(br.readLine().trim());
        
        for(int t_i=0; t_i<T; t_i++)
        {
            String[] in=br.readLine().split(" ");
            long N = Long.parseLong(in[0]);
            long K = Long.parseLong(in[1]);

            long out_ = solve(K, N);
            System.out.println(out_);
            System.out.println("");
         }

         wr.close();
         br.close();
    
	}
	static long solve(long K, long N){
        // write code here
		if(K>N)K=N;
		if(N==1) return 1;
		if(N==2 && K==1) return 1;
		if(N==2 && K==2) return 2;
		
        int mod=1000000007;
        long[] dict=new long[(int)N+1];
        dict[0]=0;
        dict[1]=1;
        dict[2]=2;
        for(int i=3;i<N+1;i++) {
        	if(i>K) {
        		for(int j=1;j<=K;j++) {
        			dict[i]+=dict[j];
        			dict[i]%=mod;
        		}
        	}
        	else {
        		for(int j=1;j<i;j++) {
        			dict[i]+=dict[j];
        			dict[i]%=mod;
        			dict[i]++;
        		}
        	}
        	
        }
        printArr(dict);
        return dict[(int)N];
        
    }
	static void printArr(long[] arr) {
		System.out.println("[ ");
		for(int i=0;i<arr.length;i++) {
			
			System.out.println(" "+arr[i]);
		}
		System.out.println("]");
	}
}
