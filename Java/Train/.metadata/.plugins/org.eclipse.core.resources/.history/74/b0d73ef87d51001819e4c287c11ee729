package Train;

import java.util.Arrays;
import java.util.Comparator;
import java.util.Scanner;

public class BoxStackingProblem {
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		
		while(t-->0) {
			int n=sc.nextInt();
			Box[] boxList=new Box[3*n];
			for(int i=0;i<n;i++) {
				int l=sc.nextInt();
				int h=sc.nextInt();
				int b=sc.nextInt();
				boxList[i]=new Box(l, b, h);
				boxList[i+1]=new Box(b,h,l);
				boxList[i+2]=new Box(h, l, b);
			}
			Arrays.sort(boxList, Comparator.comparingInt((Box b)->b.getA()));
		}
		
	}
	static class Box{
		int l;
		int b;
		int h;
		int a;
		
		public Box(int l, int b, int h) {
			super();
			this.l = l;
			this.b = b;
			this.h = h;
			this.a=l*b;
		}
		public int getL() {
			return l;
		}
		public void setL(int l) {
			this.l = l;
		}
		public int getB() {
			return b;
		}
		public void setB(int b) {
			this.b = b;
		}
		public int getH() {
			return h;
		}
		public void setH(int h) {
			this.h = h;
		}
		public int getA() {
			return a;
		}
		public void setA(int a) {
			this.a = a;
		}
		
		
	}
}
