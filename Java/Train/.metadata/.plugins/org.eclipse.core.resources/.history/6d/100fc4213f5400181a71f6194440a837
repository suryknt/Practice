package challange;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import java.util.StringTokenizer;

public class Kvowels {
	public static void main(String[] args) {
		FastReader fr=new FastReader();
		int t=fr.nextInt();
		int n=fr.nextInt();
		int k=fr.nextInt();
		char[] s=fr.nextLine().toLowerCase().toCharArray();
		int[][] dp=new int[5][n];
		int[] visited=new int[256];
		Arrays.fill(visited, -1);
		Set<Character> vowels=new HashSet<Character>();
		vowels.addAll(Arrays.asList('a','e','i','o','u'));
		for(int v=0;v<5;v++) {
			int curr_length=1;
			visited[s[0]]=0;
			int vCount=0;
			for(int i=1;i<n;i++) {
				if(vowels.contains(s[i])) {
					if(visited[s[i]]==-1 || i-curr_length>visited[s[i]]) {
						if(vCount<v) {
							vCount++;
							curr_length++;
						}else {
							curr_length=i-visited[s[i]];
						}
						
					}
					else {
						curr_length++;
					}
				}else curr_length++;
				
				dp[v][i]=curr_length;
						
			}
			System.out.println(dp[v][n-1]);
		}
		
	}
	
	static class FastReader{
		BufferedReader br;
		StringTokenizer st;
		
		public FastReader() {
			br=new BufferedReader(new InputStreamReader(System.in));
		}
		public String next() {
			while(st==null || !st.hasMoreElements()) {
				try {
					st=new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}
		int nextInt() {
			return Integer.parseInt(next());
		}
		long nextLong() {
			return Long.parseLong(next());
		}
		String nextLine() {
			String ret="";
			try {
				ret=br.readLine();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return ret;
		}
		
		
	}
}
